#!/usr/bin/env python

import os
import sys


def process_dump_line(line):
    line = line.strip()
    num = int(line[:6], 16)
    line = line[9:].strip()
    return (num, line)


def is_dump_line(line):
    comment_prefixes = ["*", "Introducing", "Contestant", "Player"]
    return all(not line.startswith(pr) for pr in comment_prefixes)


def diff_dumps(dump1, dump2):
    N = len(dump1)

    for i in range(0, N, 16):
        segment1 = dump1[i : (i + 16)]
        segment2 = dump2[i : (i + 16)]

        if segment1 != segment2:

            diff = list()
            for byte1, byte2 in zip(segment1, segment2):
                diff.append("  " if byte1 == byte2 else "**")

            prefix = f"0x{i:02x} > "
            print (file=sys.stderr)
            print (prefix, end='', file=sys.stderr)
            print (" ".join(segment1), file=sys.stderr)
            print (' ' * len(prefix), end='', file=sys.stderr)
            print (" ".join(segment2), file=sys.stderr)
            print (' ' * len(prefix), end='', file=sys.stderr)
            print (" ".join(diff), file=sys.stderr)


def get_dump(file):
    dump = list()

    with open(file, 'r') as f:
        for line in f:
            if not is_dump_line(line):
                continue

            (_, line) = process_dump_line(line)
            dump += line.split()

    return dump


if __name__ == "__main__":

    if sys.version_info[0] < 3:
        raise Exception("Your Python interpreter must be 3.7 or greater")
    if len(sys.argv) != 3:
        sys.exit(f"Usage: {__file__} dump-file-1 dump-file-2")

    file1 = sys.argv[1]
    file2 = sys.argv[2]

    dump1 = get_dump(file1)
    dump2 = get_dump(file2)

    if dump1 == dump2:
        print ("Dumps are identical!")
    elif len(dump1) != len(dump2):
        print ("Invalid dumps!", file=sys.stderr)
        sys.exit(1)
    else:
        print ("Dumps are different!", file=sys.stderr)
        diff_dumps(dump1, dump2)
        sys.exit(1)
